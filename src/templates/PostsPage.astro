---
import { getCollection } from 'astro:content';
import Base from '@/layouts/base.astro';
import Navbar from '@/components/Navbar.astro';
import Footer from '@/components/Footer.astro';
import BlogPostCard from '@/components/blog/BlogPostCard.astro';
import Tag from '@/components/blog/Tag.astro';
import { slugifyText } from '@/common';
import EasterEgg from '@/components/EasterEgg.astro';

interface Props {
    tag?: string;
    displayTagOverlay?: boolean;
}

const { tag: filteredTag, displayTagOverlay = true } = Astro.props;

let allBlogPosts = await getCollection('blog');

// sort by publishedOn Date object
allBlogPosts = allBlogPosts.sort((a, b) => {
  return b.data.publishedOn.getTime() - a.data.publishedOn.getTime();
});

// if production, filter out draft
if (import.meta.env.PROD) {
  allBlogPosts = allBlogPosts.filter((post) => !post.data.draft);
}

// create array of tags
let tags: string[] = [];
allBlogPosts.forEach((post) => {
  post.data.tags.forEach((tag) => {
    if (!tags.includes(tag)) {
      tags.push(tag);
    }
  });
});

// if tag is defined, filter out posts that don't have the tag
if (filteredTag) {
  allBlogPosts = allBlogPosts.filter((post) => post.data.tags.includes(filteredTag));
}
---
<Base meta={{
  title: filteredTag ? `Posts tagged with ${filteredTag} on Simon's Blog` : 'Simon\'s Blog',
  description: 'On my blog I mostly write about coding and other fun stuff.',
}}>
  <Navbar />

  <main class="max-w-7xl mx-auto px-4 pb-16">
    <header class="py-16 md:py-32 flex flex-col items-center">
      <h1 class="text-4xl md:text-6xl lg:text-7xl font-serif mb-4">Posts</h1>
      <p class="text-lg text-zinc-300 text-center">Writings about coding and other fun stuff :)</p>

      <!-- tags -->
      <div class="flex flex-wrap justify-center max-w-2xl gap-3 mt-8">
        {tags.map((tag) => (
          <Tag title={tag} fontSize='md:text-lg' href={`/posts${tag === filteredTag ? '' : '/tag/' + slugifyText(tag)}/`} selected={tag === filteredTag} />
        ))}
      </div>
    </header>
    
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 auto-rows-fr gap-4">
    {allBlogPosts.map(async (post) => <BlogPostCard post={post} displayTags={displayTagOverlay} />)}
    </div>

    <p class="mt-8 text-zinc-400 text-lg mb-16">Showing {allBlogPosts.length} of {allBlogPosts.length} posts</p>

    <EasterEgg easterEgg={1} />
  </main>

  <Footer />
</Base>