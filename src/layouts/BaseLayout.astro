---
import { ClientRouter } from 'astro:transitions'
import LoadingIndicator from 'astro-loading-indicator/component'
import '../app.scss'

interface Props {
  title: string
  description?: string
  canonical?: string
}

const { title, canonical, description } = Astro.props

const createTitle = (title: string) => {
  if (title.includes('—')) return title

  return title
    ? `${title}—Simon Sorensen`
    : 'Simon Sorensen—Software Engineer in London'
}
---

<html lang="en" transition:animate="fade">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/ico" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    {description ? <meta name="description" content={description} /> : null}
    <title>{createTitle(title)}</title>
    {
      canonical && (
        <link rel="canonical" href={`https://simse.io${canonical}`} />
      )
    }
    <style is:global>
      @font-face {
        font-family: 'Soehne';
        src: url('/fonts/Soehne-Regular.woff2');
        font-display: swap;
      }
      @font-face {
        font-family: 'Soehne';
        src: url('/fonts/Soehne-Bold.woff2');
        font-weight: 700;
        font-display: swap;
      }
      @font-face {
        font-family: 'SoehneMono';
        src: url('/fonts/Soehne-Mono-Regular.woff2');
        font-display: swap;
      }
      @font-face {
        font-family: 'SoehneMono';
        src: url('/fonts/Soehne-Mono-Bold.woff2');
        font-weight: 700;
        font-display: swap;
      }
    </style>
    <ClientRouter />
    <LoadingIndicator color="#2563eb" />
  </head>
  <body class="text-zinc-100 bg-zinc-950">
    <slot />
  </body>
</html>
