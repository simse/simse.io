---
// import components
import Layout from '../../layouts/Layout.astro';
import PageTitle from '../../components/PageTitle.astro';

// create breadcrumbs
const breadcrumbs = [
	{
		name: 'Weight Loss Journey',
        path: '/weight-loss-journey'
	}
]

// utility functions
const getLast = (input: any, key: string) => {
	return input[key][input[key].length-1].value
}

// load data
const response = await fetch('https://weight.simse.io/summary');
const data = await response.json();

// get today/latest data
let today = {};
today.weight = {
	value: getLast(data, 'weight_body_mass'),
	unit: 'kg',
	title: 'Current Weight'
};
today.calories = {
	value: getLast(data, 'dietary_energy'),
	unit: 'kcal',
	title: 'Calorie Intake'
};
today.steps = {
	value: getLast(data, 'step_count'),
	unit: 'steps',
	title: 'Steps Taken'
};

// get last updated timestamp
const lastUpdated = new Date();
---

<Layout title="Weight Loss Journey" breadcrumbs={breadcrumbs}>
	<!-- overview -->
	<h2 class="mt-4 text-xl font-bold">Summary</h2>
	<div class="grid gap-2 grid-cols-4 mt-2">
		{Object.keys(today).map(metricKey => {
			const metric = today[metricKey];
			/*const metricUnit = today[metricKey].unit;
			const metricTitle = today[metricKey].title;*/

			return (
				<div class="border-r p-4 first:pl-0">
					<h3 class="mb-4">{metric.title}</h3>
					<p><span class="text-4xl mr-2">{metric.value}</span> <span class="text-xl">{metric.unit}</span></p>
				</div>
			)
		})}
	</div>

	<p class="mt-8 text-gray-500">Last updated {lastUpdated.toLocaleString("en-UK")}</p>
</Layout>

