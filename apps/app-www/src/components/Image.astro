---
import type { Media } from "@simse/app-cms/src/payload-types";

export interface Props {
    // this or
    image?: Media;

    // this
    id?: string;
    alt?: string;
    credit?: string;

    // all the other stuff
    css?: string;
    height?: number;
    width?: number;
    placeholder?: boolean;
    responsive?: boolean;
}

// get props
const { id, alt, credit, height, width, css, placeholder = true, responsive = true } = Astro.props as Props;
let { image } = Astro.props as Props;

// synth image object if not given
if (!image) {
    image = {
        id: "",
        createdAt: "",
        updatedAt: "",
        cloudflareImageId: id,
        alt,
        credit,
    };
}

// create cloudflare images url given id, height and width
const createCloudflareUrl = (id?: string, height?: number, width?: number) => {
    if (!id) {
        return "";
    }

    return `https://imagedelivery.net/momKfEj2XLFFfTO94YnvIg/${id}/format=auto,h=${height},w=${width},fit=cover`;
};
---

<div
    class={"aspect-[5/3] relative " + (css ? css : "")}
    style={responsive ? '' : `height:${height}px;width:${width}px;`}
>
    {placeholder && <img class="w-full h-full" src="/images/placeholder.svg" alt="" />}

    <img
        class="top-0 max-h-full absolute w-full"
        src={createCloudflareUrl(image.cloudflareImageId, height, width)}
        alt={image.alt}
    />

    {
        image.credit !== "" && (
            <p class="mt-4 text-gray-500 dark:text-gray-400">{image.credit}</p>
        )
    }
</div>
