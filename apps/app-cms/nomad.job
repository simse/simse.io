job "simse.io/app-cms-[[ env "ENV" ]]" {
  region = "global"
  datacenters = ["dc1"]
  type        = "service"

  meta {
    version = "2"
  }

  group "app-cms" {
    count = 1

    network {
      port "http" {
        to = 3000
        host_network = "private"
      }

      port "db" {
        to = 27017
        host_network = "private"
      }
    }

    task "payload" {
      driver = "docker"
      
      config {
        image = "[[ env "DOCKER_IMAGE" ]]"
        ports = ["http"]
        force_pull = true
      }

      env {
        MONGODB_URI = "mongodb://${NOMAD_ADDR_db}/payload"
        PORT = "3000"
        PAYLOAD_SECRET = "${PAYLOAD_SECRET}"
        CLOUDFLARE_IMAGES_ACCOUNT_ID = "[[ env "CLOUDFLARE_IMAGES_ACCOUNT_ID" ]]"
        PAYLOAD_PUBLIC_CLOUDFLARE_IMAGES_ACCOUNT_HASH = "[[ env "CLOUDFLARE_IMAGES_ACCOUNT_HASH" ]]"
        CLOUDFLARE_IMAGES_TOKEN = "[[ env "CLOUDFLARE_IMAGES_TOKEN" ]]"
        OPENAI_API_KEY = "[[ env "OPENAI_API_KEY" ]]"
        PAYLOAD_SERVER_URL = "https://[[ env "DOMAIN" ]]"
        GITHUB_WEBHOOK_TOKEN = "[[ env "GITHUB_WEBHOOK_TOKEN" ]]"
      }

      service {
        port = "http"
	      name = "simse-io-app-cms-[[ env "ENV" ]]"

        tags = [
          "traefik.enable=true",
          "traefik.http.routers.simse-cms-[[ env "ENV" ]].rule=Host(`[[ env "DOMAIN" ]]`)",
          "traefik.http.routers.simse-cms-[[ env "ENV" ]].tls.certresolver=sample",
        ]

        check {
          type     = "http"
          path     = "/admin"
          interval = "10s"
          timeout  = "2s"
        }
      }

      resources {
        cpu    = 100
        memory = 1024
      }
    }

    task "db" {
      driver = "docker"
      
      config {
        image = "mongo:6.0.3"
        volumes = [
          "/nomad/simse.io/app-cms-[[ env "ENV" ]]/db:/data/db",
        ]
        ports = ["db"]
      }

      resources {
        cpu    = 500
        memory = 1024
      }
    }
  }
}